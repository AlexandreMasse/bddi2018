@charset "UTF-8";
/*****************/
/****** _Config *****/
/*****************/
/* # Config */
/* # Config */
/****************/
/* # Grid */
/****************/
/*
 - `gutter` : gutter widthÂ ;
*/
/****************/
/* # Media Queries with _Sass-mq_ */
/****************/
/* https://github.com/sass-mq/sass-mq */
/****************/
/* # Variables */
/****************/
/* # Sass plugins */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 8/9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

th,
td {
  padding: 0;
}

/* # Utilities */
/* # Clearfix */
/* # _Reset_  */
/* # Fonts */
/* # Font-face */
@font-face {
  font-family: 'roboto-regular';
  font-weight: 400;
  src: url("../fonts/roboto-regular.ttf");
}

@font-face {
  font-family: 'Aileron-ultralight';
  src: url("../fonts/aileron/Aileron-UltraLight.woff2") format("woff2"), url("../fonts/aileron/Aileron-UltraLight.woff") format("woff");
  font-weight: 200;
  font-style: normal;
}

@font-face {
  font-family: 'Aileron-light';
  src: url("../fonts/aileron/Aileron-Light.woff2") format("woff2"), url("../fonts/aileron/Aileron-Light.woff") format("woff");
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: 'Aileron-regular';
  src: url("../fonts/aileron/Aileron-Regular.woff2") format("woff2"), url("../fonts/aileron/Aileron-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'GTWalsheimProLight';
  src: url("../fonts/walsheim/GTWalsheimProLight.woff2") format("woff2"), url("../fonts/walsheim/GTWalsheimProLight.woff") format("woff");
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: 'GTWalsheimProRegular';
  src: url("../fonts/walsheim/GTWalsheimProRegular.woff2") format("woff2"), url("../fonts/walsheim/GTWalsheimProRegular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

/* # ICONS */
@font-face {
  font-family: "Flaticon";
  src: url("../fonts/icons/Flaticon.eot");
  src: url("../fonts/icons/Flaticon.eot?#iefix") format("embedded-opentype"), url("../fonts/icons/Flaticon.woff") format("woff"), url("../fonts/icons/Flaticon.ttf") format("truetype"), url("../fonts/icons/Flaticon.svg#Flaticon") format("svg");
  font-weight: normal;
  font-style: normal;
}

.fi:before {
  display: inline-block;
  font-family: "Flaticon";
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  line-height: 1;
  text-decoration: inherit;
  text-rendering: optimizeLegibility;
  text-transform: none;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

.flaticon-link:before {
  content: "\f100";
}

.flaticon-grid-world:before {
  content: "\f101";
}

.flaticon-vimeo-logo:before {
  content: "\f102";
}

.flaticon-social-vimeo-in-a-circle-logo:before {
  content: "\f103";
}

.flaticon-linkedin-logo:before {
  content: "\f104";
}

.flaticon-linkedin-button:before {
  content: "\f105";
}

.flaticon-instagram-logo-1:before {
  content: "\f106";
}

.flaticon-instagram-logo:before {
  content: "\f107";
}

.flaticon-dribbble-logo:before {
  content: "\f108";
}

.flaticon-dribble-logo-button:before {
  content: "\f109";
}

.flaticon-behance-logo:before {
  content: "\f10a";
}

.flaticon-behance-logo-button:before {
  content: "\f10b";
}

.flaticon-3d-outlined-shape:before {
  content: "\f10c";
}

.flaticon-github-logo:before {
  content: "\f10d";
}

.flaticon-github:before {
  content: "\f10e";
}

.flaticon-facebook-logo-button:before {
  content: "\f10f";
}

.flaticon-twitter-logo-button:before {
  content: "\f110";
}

.flaticon-twitter-logo-silhouette:before {
  content: "\f111";
}

.flaticon-facebook-logo:before {
  content: "\f112";
}

.flaticon-left-arrow:before {
  content: "\f113";
}

.flaticon-arrow-point-to-right:before {
  content: "\f114";
}

.flaticon-right-arrow-1:before {
  content: "\f115";
}

.flaticon-right-arrow:before {
  content: "\f116";
}

/*****************/
/*** _Project ****/
/*****************/
/* # Base */
/* # Font Mixins */
/* # Base */
/*****************/
/******HTML5 Elements*****/
/*****************/
* {
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  position: relative;
  color: #000;
  -webkit-font-smoothing: antialiased;
}

*, *::before, *::after {
  background-repeat: no-repeat;
}

h1, h2, h3, h4 {
  margin: 0;
}

p {
  margin: 0;
}

svg, img {
  width: 100%;
  max-width: 100%;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}

a:hover {
  text-decoration: none;
}

button:focus,
input:focus {
  outline: 0;
}

body {
  font-family: "roboto-regular", sans-serif;
  font-style: normal;
  font-size: 18px;
  font-weight: 100;
  line-height: 1;
}

/*****************/
/****** USEFUL CLASSES *****/
/*****************/
-overflow {
  overflow: hidden;
}

-uppercase {
  text-transform: uppercase;
}

canvas {
  z-index: -100;
  position: fixed;
  top: 0;
  left: 0;
  opacity: 0.2;
}

/* # Font Mixins */
/*****************/
/****** Text styles *****/
/*****************/
-underline {
  display: inline-block;
  position: relative;
}

-underline:after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -1rem;
  width: 100%;
  height: 0.8rem;
  background-color: #fff;
}

/* # Templates */
/* # footer */
html, body {
  width: 100%;
  height: 100%;
}

section {
  position: relative;
  width: 100%;
  min-height: 100%;
}

.hidden {
  display: none;
}

/* # header */
header {
  margin: 35px;
  position: absolute;
  top: 0;
}

header .header_logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: auto;
  float: left;
  height: 50px;
}

header .header_logo img {
  height: 50px;
  width: auto;
}

header .header_logo span {
  color: #f8f8f8;
  opacity: 0.4;
  margin-left: 20px;
  font-size: 15px;
  font-family: "Aileron-light";
  letter-spacing: 2px;
}

header .header_menu {
  cursor: pointer;
  height: 50px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: center;
  position: fixed;
  margin-right: 35px;
  right: 60px;
  z-index: 1000;
}

header .header_menu .header_menu-open, header .header_menu .header_menu-close {
  line-height: 50px;
  color: #f8f8f8;
  text-transform: uppercase;
  font-size: 15px;
  position: relative;
  letter-spacing: 3px;
  opacity: 0.9;
  font-family: "Aileron-light";
}

header .header_menu .header_menu-open:after, header .header_menu .header_menu-close:after {
  content: '';
  width: 40px;
  height: 1px;
  background: #f8f8f8;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  left: 80px;
  opacity: 0.9;
}

header .header_menu .header_menu-close:after {
  background: #8625FA;
}

header .header_menu.active .header_menu-open {
  display: none;
}

header .header_menu.active .header_menu-close {
  display: block;
}

@media screen and (max-width: 768px) {
  header .header_menu {
    top: 50px;
  }
}

/* # Layout styles */
/*****************/
/****** TABLE LAYOUT *****/
/*****************/
-table {
  display: table;
  width: 100%;
}

-table-full {
  display: table;
  width: 100%;
  height: 100%;
}

-table-row {
  display: table-row;
  height: auto;
}

-table-row-min {
  display: table-row;
  height: 1px;
}

-table-cell {
  display: table-cell;
  vertical-align: top;
}

-table-cell-middle {
  vertical-align: middle;
}

-table-cell-bottom {
  vertical-align: bottom;
}

/* # Pages */
body {
  background-color: #19171a;
  color: #f8f8f8;
}

body .social-share {
  position: fixed;
  bottom: 35px;
  right: 35px;
}

body .social-share .social-share__facebook, body .social-share .social-share__twitter {
  cursor: pointer;
}

body .social-share .social-share__facebook:hover span.fi:before, body .social-share .social-share__twitter:hover span.fi:before {
  opacity: 1;
}

body .social-share .social-share__facebook {
  margin-bottom: 15px;
}

body .social-share span.fi {
  margin: 15px 0;
}

body .social-share span.fi:before {
  transition: all 0.5s ease;
  opacity: 0.5;
}

body.menu-active .menu {
  display: block;
  opacity: 1;
}

body.menu-active .landing, body.menu-active .categories {
  display: none;
}

body .slideToFade {
  opacity: 1;
  display: block;
}

body .slideToFade.hidden {
  display: none;
  opacity: 0;
}

.category__content {
  width: 940px;
  margin: 0 auto;
  margin-top: 200px;
}

.category__content p.category__description {
  color: #f8f8f8;
  line-height: 40px;
  font-size: 20px;
  font-family: "GTWalsheimProRegular";
  width: 700px;
  margin-bottom: 80px;
}

.category__content p.category__description .fi:before {
  font-size: 14px;
  color: #8625FA;
}

.category__content .projects__list-item {
  cursor: pointer;
  width: 300px;
  height: 350px;
  float: left;
}

.category__content .projects__list-item:nth-of-type(3n+2) {
  margin: 0 20px;
}

.category__content .projects__list-item .project__thumbnail {
  width: 300px;
  height: 200px;
  overflow: hidden;
}

.category__content .projects__list-item .project__thumbnail-img {
  width: 300px;
  height: 200px;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  transition: all 0.7s ease;
}

.category__content .projects__list-item h2 {
  font-family: "GTWalsheimProRegular";
  margin: 15px 2px 10px 2px;
  font-size: 20px;
  line-height: 25px;
}

.category__content .projects__list-item p {
  font-family: "Aileron-light";
  font-size: 12px;
  line-height: 20px;
  opacity: 0.8;
}

.category__content .projects__list-item:hover .project__thumbnail-img {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

#homepage {
  width: 100%;
  height: 100%;
}

#homepage .landing {
  width: 100%;
  height: 100%;
}

#homepage .landing__content {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  width: 60%;
  left: 15%;
}

#homepage .landing__content h1 {
  color: #f8f8f8;
  opacity: 0.4;
  font-size: 14px;
  margin-bottom: 10px;
  font-family: "Aileron-light";
  letter-spacing: 3px;
}

#homepage .landing__content p {
  color: #f8f8f8;
  line-height: 40px;
  font-size: 20px;
  font-family: "GTWalsheimProRegular";
}

#homepage .landing__start {
  position: absolute;
  bottom: 50px;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  cursor: pointer;
}

#homepage .landing__start span {
  line-height: 50px;
  color: #f8f8f8;
  text-transform: uppercase;
  font-size: 12px;
  position: relative;
  letter-spacing: 3px;
  opacity: 0.9;
  font-family: "Aileron-light";
}

#homepage .landing__start span:after {
  content: '';
  width: 1px;
  height: 100px;
  background: #f8f8f8;
  position: absolute;
  opacity: 0.9;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  top: 20px;
}

#homepage .categories {
  width: 100%;
  height: 100%;
}

#homepage .categories .projects__category {
  width: 100%;
  height: 100%;
  position: relative;
}

#homepage .categories .projects__category-title {
  left: 100px;
  -webkit-transform: rotate(-180deg);
      -ms-transform: rotate(-180deg);
          transform: rotate(-180deg);
  cursor: pointer;
  position: absolute;
  top: 150px;
  text-align: right;
  line-height: 30px;
}

#homepage .categories .projects__category-title h2 {
  -webkit-writing-mode: vertical-lr;
      -ms-writing-mode: tb-lr;
          writing-mode: vertical-lr;
  text-transform: uppercase;
  letter-spacing: 3px;
  position: relative;
  opacity: 0.9;
  font-family: "Aileron-light";
}

#homepage .categories .projects__category-title h2:after {
  content: '';
  width: 1px;
  height: 50px;
  background: #f8f8f8;
  position: absolute;
  opacity: 1;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  bottom: -65px;
}

#homepage .categories .projects__category-title-long {
  max-width: 300px;
  left: -70px;
}

#homepage .categories .projects__category-content {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 850px;
  height: 500px;
}

#homepage .categories .projects__category-thumbnail {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  width: 700px;
  height: 350px;
  position: absolute;
  left: 0;
  bottom: 0;
  cursor: pointer;
  overflow: hidden;
}

#homepage .categories .projects__category-thumbnail-img {
  display: block;
  width: 100%;
  height: 100%;
  transition: -webkit-transform .7s;
  transition: transform .7s;
  transition: transform .7s, -webkit-transform .7s;
}

#homepage .categories .projects__category-thumbnail:hover .projects__category-thumbnail-img {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

#homepage .categories .projects__category-description {
  background: #f8f8f8;
  width: 350px;
  height: 250px;
  padding: 25px;
  position: absolute;
  top: 0;
  right: 0;
  font-family: "Aileron-regular";
  font-size: 16px;
  text-align: justify;
}

#homepage .categories .projects__category-description p {
  color: #19171a;
  line-height: 25px;
  font-family: "Aileron-regular";
  font-size: 16px;
}

#homepage .categories .projects__category-description .action-show {
  text-align: right;
  position: absolute;
  right: 25px;
  bottom: 25px;
  cursor: pointer;
}

#homepage .categories .projects__category-description .action-show:before {
  color: #8625FA;
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}

.loader #preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.loader #loader {
  display: block;
  position: relative;
  left: 50%;
  top: 50%;
  width: 100px;
  height: 100px;
  margin: -75px 0 0 -75px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: rgba(255, 255, 255, 0.5);
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
}

.loader #loader:before {
  content: "";
  position: absolute;
  top: 5px;
  left: 5px;
  right: 5px;
  bottom: 5px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: #8625FA;
  -webkit-animation: spin 3s linear infinite;
  animation: spin 3s linear infinite;
}

.loader #loader:after {
  content: "";
  position: absolute;
  top: 15px;
  left: 15px;
  right: 15px;
  bottom: 15px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: #f8f8f8;
  -webkit-animation: spin 1.5s linear infinite;
  animation: spin 1.5s linear infinite;
}

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.loader.hidden-loader {
  display: none;
}

.menu {
  opacity: 0;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  display: none;
  z-index: 999;
}

.menu__navigation {
  width: 700px;
  position: absolute;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  top: 200px;
  margin-bottom: 100px;
}

.menu__navigation .menu__items-item {
  height: 100px;
  text-transform: uppercase;
  font-family: "GTWalsheimProRegular";
  letter-spacing: 15px;
  font-size: 50px;
  margin: 50px 0;
  transition: all 0.5s ease;
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
  cursor: pointer;
}

.menu__navigation .menu__items-item .menu__thumbnail {
  width: 700px;
  height: 300px;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  text-align: center;
  position: absolute;
  top: -100%;
  left: 0;
  opacity: 0;
  z-index: 1;
  transition: all 0.5s ease;
}

.menu__navigation .menu__items-item span {
  cursor: pointer;
  position: relative;
  z-index: 2;
  opacity: 0.5;
  transition: all 0.5s ease;
}

.menu__navigation .menu__items-item:hover .menu__thumbnail {
  opacity: 1;
}

.menu__navigation .menu__items-item:hover span {
  opacity: 1;
  font-weight: bold;
}

.project__content {
  width: 940px;
  margin: 0 auto;
  margin-top: 200px;
}

.project__content .project__informations h1 {
  text-transform: uppercase;
  letter-spacing: 3px;
  font-family: "GTWalsheimProRegular";
  margin-bottom: 10px;
}

.project__content .project__informations h2 {
  font-family: "Aileron-light";
  font-size: 16px;
}

.project__content .project__informations h2 span {
  text-decoration: underline;
  cursor: pointer;
}

.project__content .project__informations .action-show-project {
  margin-top: 50px;
}

.project__content .project__screens {
  margin-top: 100px;
}

.project__back-link {
  position: absolute;
  left: 30px;
  font-family: "Aileron-regular";
  text-transform: uppercase;
  letter-spacing: 4px;
  cursor: pointer;
}

.project-iframe {
  border: none;
  height: 100vh;
  width: 100vw;
}

.project:hover .project__thumbnail-img {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

/* # Mediaqueries */
@media all and (min-width: 20em) and (max-width: 37.49em) {
  .intro {
    background: blue;
    color: #f4f4f4;
    padding: 30px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
