webpackJsonp([0],[,function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i={arrAverage:function(e){return e.reduce(function(e,n){return e+n})/e.length},map:function(e,n,t,i,a){return(e-n)/(t-n)*(a-i)+i}};n.default=i},function(e,n,t){"use strict";(function(e){function i(e){return e&&e.__esModule?e:{default:e}}function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=t(7),r=i(o),c=t(6),l=i(c),d=t(16),u=(i(d),t(18)),h=i(u),f=t(17),m=i(f),p=t(20),v=(i(p),t(19)),x=(i(v),t(10)),g=i(x),y=t(1),_=i(y),b=t(14),w=i(b),k=t(12),L=i(k),S=t(8),z=(i(S),t(9)),M=i(z),A=t(11),P=i(A),D=t(15),C=i(D),T=t(5),E=(i(T),function(){function n(){var t=this;a(this,n),this.pageLoad=document.querySelector(".load"),this.btnPageLoad=this.pageLoad.querySelector(".load-btn"),this.sentenceLoad=this.pageLoad.querySelector(".load-sentence"),this.loadedSentence=this.pageLoad.querySelector(".loaded-sentence"),this.spaceBtn=document.querySelector(".content_space__button"),this.hasPressSpace=!1,this.hasTouchScreen=!1,this.nbLoaded=0;var i=new e.TextureLoader;this.texture=i.load(w.default),this.textureSphere=i.load(L.default),this.displacementMap=i.load(P.default),this.mouse=new e.Vector3(0,0,0),this.gyroscope=new e.Vector3(0,0,0),this.direction_mouse=new e.Vector3(0,0,0),this.cameraPosition_mouse=new e.Vector3(0,0,0),this.cameraEasing_mouse=10,this.fov=55,this.fovSpeed=45,this.audio=new r.default(g.default,151,45,null),this.time=0,this.start=Date.now(),this.speed=20,this.speedX2=80,this.midAverrage=0,this.ready=!1,this.birdspeed=.2,this.birdspeedX2=1.5,this.aileMovement=.01,this.color=new e.Color("#F4B3C3"),this.colorDark=new e.Color("#3468a2"),this.sceneW=window.innerWidth,this.sceneH=window.innerHeight,this.direction_mouse=new e.Vector3(0,0,0),this.container=document.querySelector("#main"),document.body.appendChild(this.container),this.camera=new e.PerspectiveCamera(this.fov,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.z=50,this.camera.position.y=-200,this.camera.lookAt(new e.Vector3(0,0,0)),this.scene=new e.Scene,this.Ambientlight=new e.AmbientLight("#fff"),this.directionalLight=new e.DirectionalLight("#404040"),this.directionalLight.position.set(1,1,1).normalize(),this.pointLight=new e.PointLight(16622636,1),this.pointLight.position.set(0,0,.1),this.mistClass=new l.default,this.mistSprite=this.mistClass.sprite,this.animation={},this.mixers=[],this.birds=[],(new e.JSONLoader).load(M.default,function(n,i){for(var a=new e.SkinnedMesh(n,new e.MeshFaceMaterial(i)),s=(a.material.mats,0);s<i.length;s++){var o=i[s];o.skinning=!0,o.shading=e.FlatShading}for(var r=0;r<50;r++){var c=a.clone();c.position.x=_.default.map(Math.random(),0,1,-300,400),c.position.y=_.default.map(Math.random(),0,1,100,300),c.position.z=13,c.rotation.x=2,t.birds.push(c);var l=new e.AnimationMixer(c);l.clipAction(n.animations[0]).setDuration(1).play(),t.mixers.push(l),t.scene.add(c)}t.ready=!0});var s=new e.PlaneGeometry(800,800,256,256);this.material=new e.ShaderMaterial({uniforms:e.UniformsUtils.merge([e.UniformsLib.common,e.UniformsLib.specularmap,e.UniformsLib.envmap,e.UniformsLib.aomap,e.UniformsLib.lightmap,e.UniformsLib.ambient,e.UniformsLib.lights,e.UniformsLib.fog,{u_time:{value:0},averrage:{value:0},speed:{value:this.speed},loaded:{value:this.nbLoaded},diffuse:{value:new e.Color(16777215)}}]),vertexShader:h.default,fragmentShader:m.default,wireframe:!0,fog:!0,lights:!0,side:e.DoubleSide,defines:{USE_MAP:!1}}),this.materialSphere=new e.ShaderMaterial({uniforms:e.UniformsUtils.merge([e.UniformsLib.common,e.UniformsLib.specularmap,e.UniformsLib.envmap,e.UniformsLib.aomap,e.UniformsLib.lightmap,e.UniformsLib.ambient,e.UniformsLib.lights,e.UniformsLib.fog,{u_time:{value:0},speed:{value:this.speed},diffuse:{value:new e.Color(16777215)}}]),vertexShader:h.default,fragmentShader:m.default,fog:!0,side:e.DoubleSide,defines:{USE_MAP:!0}}),this.texture.wrapS=e.RepeatWrapping,this.texture.wrapT=e.RepeatWrapping,this.material.uniforms.map.value=this.texture,this.plane=new e.Mesh(s,this.material);var o=new e.SphereGeometry(3,30,30);new e.MeshLambertMaterial({color:"#fff",transparent:!0});this.sphere=new e.Mesh(o,this.materialSphere);var c=new e.SpriteMaterial({map:this.textureSphere,useScreenCoordinates:!1,color:16777215,transparent:!0,blending:e.AdditiveBlending}),d=new e.Sprite(c);d.scale.set(10,10,1),this.sphere.add(d),this.scene.add(this.Ambientlight),this.scene.add(this.plane);for(var u=0;u<this.mistSprite.length;u++)this.scene.add(this.mistSprite[u]);this.scene.background=this.color,this.scene.fog=new e.Fog("#F4B3C3",50,300),this.plane.material.needsUpdate=!0,this.renderer=new e.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0,this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.renderReverseSided=!1,this.container.appendChild(this.renderer.domElement),window.addEventListener("resize",this.onWindowResize.bind(this),!1),this.onWindowResize(),this.renderer.animate(this.render.bind(this)),this.loadSound(),this.initEvent()}return s(n,[{key:"render",value:function(){this.midAverrage=_.default.arrAverage(this.audio.getSpectrum()),this.material.uniforms.u_time.value=25e-5*(Date.now()-this.start),this.material.uniforms.averrage.value=this.midAverrage,this.materialSphere.uniforms.u_time.value=25e-5*(Date.now()-this.start),this.renderer.render(this.scene,this.camera);for(var e=0;e<this.mistSprite.length;e++)this.mistClass.update();for(var n=0;n<this.birds.length;n++)this.birds[n].position.y-=this.birdspeed,this.birds[n].position.y<0&&(this.birds[n].position.y=250);for(var t=0;t<this.mixers.length;t++)this.mixers[t].update(this.aileMovement);this.direction_mouse.subVectors(this.mouse,this.cameraPosition_mouse),this.direction_mouse.multiplyScalar(.06),this.cameraPosition_mouse.addVectors(this.cameraPosition_mouse,this.direction_mouse),this.camera.position.x=this.cameraPosition_mouse.x*this.cameraEasing_mouse*-1,this.camera.position.y=this.cameraPosition_mouse.y*this.cameraEasing_mouse*-1,this.plane.rotation.y=this.cameraPosition_mouse.x*this.cameraEasing_mouse*-.009}},{key:"onWindowResize",value:function(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}},{key:"loadSound",value:function(){var e=this;this.audio._load(g.default,function(){e.sentenceLoad.classList.add("hidden"),e.loadedSentence.classList.remove("hidden"),e.btnPageLoad.classList.remove("loading"),e.btnPageLoad.classList.add("success"),e.btnPageLoad.addEventListener("click",function(n){n.preventDefault(),e.pageLoad.classList.add("hidden"),e.audio.play()}),e.nbLoaded=1,e.material.uniforms.loaded.value=1}),this.kick=this.audio.createKick({decay:1,threshold:.5,onKick:function(){},offKick:function(){}}),this.kick.on(),this.beat=this.audio.createBeat(4,function(){console.log("Beat!")}),this.beat.on()}},{key:"initEvent",value:function(){var e=this;document.addEventListener("keydown",function(n){0!==n.keyCode&&32!==n.keyCode||(n.preventDefault(),e.audio.sourceNode.playbackRate.value=2,e.material.uniforms.speed.value=e.speedX2,C.default.to(e.camera,.5,{fov:e.fovSpeed,onUpdate:function(){e.camera.updateProjectionMatrix()}}),e.birdspeed=e.birdspeedX2,e.aileMovement=.06,C.default.to(e.scene,.5,{onUpdate:function(){e.scene.fog.color=e.colorDark,e.scene.background=e.colorDark}}),e.hasPressSpace=!0,!0===e.hasPressSpace&&e.spaceBtn.classList.add("hidden"))}),document.addEventListener("touchstart",function(n){e.audio.sourceNode.playbackRate.value=2,e.material.uniforms.speed.value=e.speedX2,C.default.to(e.camera,.5,{fov:e.fovSpeed,onUpdate:function(){e.camera.updateProjectionMatrix()}}),e.birdspeed=e.birdspeedX2,e.aileMovement=.06,C.default.to(e.scene,.5,{onUpdate:function(){e.scene.fog.color=e.colorDark,e.scene.background=e.colorDark}}),e.hasTouchScreen=!0,!0===e.hasTouchScreen&&e.spaceBtn.classList.add("hidden")}),document.addEventListener("keyup",function(n){0!==n.keyCode&&32!==n.keyCode||(n.preventDefault(),e.audio.sourceNode.playbackRate.value=1,e.material.uniforms.speed.value=e.speed,C.default.to(e.camera,.5,{fov:e.fov,onUpdate:function(){e.camera.updateProjectionMatrix()}}),e.birdspeed=.2,e.aileMovement=.01,C.default.to(e.scene,.5,{onUpdate:function(){e.scene.fog.color=e.color,e.scene.background=e.color}}))}),document.addEventListener("touchend",function(n){e.audio.sourceNode.playbackRate.value=1,e.material.uniforms.speed.value=e.speed,C.default.to(e.camera,.5,{fov:e.fov,onUpdate:function(){e.camera.updateProjectionMatrix()}}),e.birdspeed=.2,e.aileMovement=.01,C.default.to(e.scene,.5,{onUpdate:function(){e.scene.fog.color=e.color,e.scene.background=e.color}})}),document.addEventListener("mousemove",function(n){e.mouse.x=2*(event.clientX/e.sceneW-.5),e.mouse.y=2*-(event.clientY/e.sceneH-.5)}),window.addEventListener("deviceorientation",function(n){var t=n.beta,i=n.gamma;e.gyroscope.x=t,e.gyroscope.y=i},!0)}}]),n}());n.default=E}).call(n,t(0))},function(e,n){},function(e,n,t){"use strict";t(3);var i=t(2),a=function(e){return e&&e.__esModule?e:{default:e}}(i);window.app=new a.default},function(e,n,t){"use strict";var i,a,s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(o,r){"object"===s(n)&&void 0!==e?e.exports=r():(i=r,void 0!==(a="function"==typeof i?i.call(n,t,n,e):i)&&(e.exports=a))}(0,function(){var e=function e(){function n(e){return a.appendChild(e.dom),e}function t(e){for(var n=0;n<a.children.length;n++)a.children[n].style.display=n===e?"block":"none";i=e}var i=0,a=document.createElement("div");a.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",a.addEventListener("click",function(e){e.preventDefault(),t(++i%a.children.length)},!1);var s=(performance||Date).now(),o=s,r=0,c=n(new e.Panel("FPS","#0ff","#002")),l=n(new e.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var d=n(new e.Panel("MB","#f08","#201"));return t(0),{REVISION:16,dom:a,addPanel:n,showPanel:t,begin:function(){s=(performance||Date).now()},end:function(){r++;var e=(performance||Date).now();if(l.update(e-s,200),e>o+1e3&&(c.update(1e3*r/(e-o),100),o=e,r=0,d)){var n=performance.memory;d.update(n.usedJSHeapSize/1048576,n.jsHeapSizeLimit/1048576)}return e},update:function(){s=this.end()},domElement:a,setMode:t}};return e.Panel=function(e,n,t){var i=1/0,a=0,s=Math.round,o=s(window.devicePixelRatio||1),r=80*o,c=48*o,l=3*o,d=2*o,u=3*o,h=15*o,f=74*o,m=30*o,p=document.createElement("canvas");p.width=r,p.height=c,p.style.cssText="width:80px;height:48px";var v=p.getContext("2d");return v.font="bold "+9*o+"px Helvetica,Arial,sans-serif",v.textBaseline="top",v.fillStyle=t,v.fillRect(0,0,r,c),v.fillStyle=n,v.fillText(e,l,d),v.fillRect(u,h,f,m),v.fillStyle=t,v.globalAlpha=.9,v.fillRect(u,h,f,m),{dom:p,update:function(c,x){i=Math.min(i,c),a=Math.max(a,c),v.fillStyle=t,v.globalAlpha=1,v.fillRect(0,0,r,h),v.fillStyle=n,v.fillText(s(c)+" "+e+" ("+s(i)+"-"+s(a)+")",l,d),v.drawImage(p,u+o,h,f-o,m,u,h,f-o,m),v.fillRect(u+f-o,h,o,m),v.fillStyle=t,v.globalAlpha=.9,v.fillRect(u+f-o,h,o,s((1-c/x)*m))}}},e})},function(e,n,t){"use strict";(function(e){function i(e){return e&&e.__esModule?e:{default:e}}function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=t(13),r=i(o),c=t(1),l=i(c),d=function(){function n(){a(this,n),this.spriteNb=60,this.sprite=[],this.fieldRange=5,this.time=0,this.faster=!1,this.fastInc=0,this.textureMist=(new e.TextureLoader).load(r.default),this.mistMaterial=new e.MeshLambertMaterial({map:this.textureMist,color:16777215,transparent:!0,opacity:.15,side:e.DoubleSide}),this.init()}return s(n,[{key:"init",value:function(){for(var n=new e.PlaneGeometry(40,40,1),t=0;t<this.spriteNb;t++)this.sprite[t]=new e.Mesh(n,this.mistMaterial),this.randomPosition(this.sprite[t])}},{key:"randomPosition",value:function(e){e.position.y=l.default.map(Math.random(),0,1,100,250),e.position.x=l.default.map(Math.random(),0,1,-250,250),e.rotation.x=-30,e.position.z=l.default.map(Math.random(),0,1,35,60)}},{key:"update",value:function(){for(var e=0;e<this.spriteNb;e++)this.sprite[e].position.y-=.01,this.sprite[e].position.y<0&&(this.sprite[e].position.y=200)}}]),n}();n.default=d}).call(n,t(0))},function(e,n,t){"use strict";function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),s=function(){function e(n,t,a,s){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];i(this,e),this.ctx;try{window.AudioContext=window.AudioContext||window.webkitAudioContext,this.ctx=new AudioContext}catch(e){throw new Error("Web Audio API is not supported in this browser")}this._bpm=t,this._beatDuration=60/this._bpm,this._offsetTime=a,this._sections=[],this._kicks=[],this._beats=[],this._startTime=0,this._pauseTime=0,this._isPlaying=!1,this._isLoaded=!1,this._progress=0,this._onUpdate=this.onUpdate.bind(this),this._onEnded=this.onEnded.bind(this),this.gainNode=this.ctx.createGain(),this.gainNode.connect(this.ctx.destination),this.analyserNode=this.ctx.createAnalyser(),this.analyserNode.connect(this.gainNode),this.analyserNode.smoothingTimeConstant=.8,this.analyserNode.fftSize=512;var r=this.analyserNode.frequencyBinCount;this.frequencyDataArray=new Uint8Array(r),this.timeDomainDataArray=new Uint8Array(r),o&&(this.debug=new c(this)),this._load(n,s),window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,window.cancelAnimationFrame=window.cancelAnimationFrame||window.mozCancelAnimationFrame}return a(e,[{key:"_load",value:function(e,n){var t=this;if(e){this._isLoaded=!1,this._progress=0;var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onprogress=function(e){t._progress=e.loaded/e.total},i.onload=function(){t.ctx.decodeAudioData(i.response,function(e){t._buffer=e,t._isLoaded=!0,n&&n()},function(e){console.log(e)})},i.send()}}},{key:"play",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.req&&cancelAnimationFrame(this.req),this._onUpdate(),this._isPlaying=!0;var n=this._pauseTime-this._startTime+e;this._startTime=this.ctx.currentTime-n,this.sourceNode=this.ctx.createBufferSource(),this.sourceNode.connect(this.analyserNode),this.sourceNode.buffer=this._buffer,this.sourceNode.start(0,n),this.sourceNode.addEventListener("ended",this._onEnded,!1)}},{key:"pause",value:function(){this.req&&cancelAnimationFrame(this.req),this.sourceNode&&(this.sourceNode.removeEventListener("ended",this._onEnded,!1),this.sourceNode.stop(0),this.sourceNode.disconnect(),this.sourceNode=null),this._pauseTime=this.ctx.currentTime,this._isPlaying=!1}},{key:"before",value:function(e,n,t){var i=this;return this._sections.push({label:e,condition:function(){return i.time<n},callback:t}),this}},{key:"after",value:function(e,n,t){var i=this;return this._sections.push({label:e,condition:function(){return i.time>n},callback:t}),this}},{key:"between",value:function(e,n,t,i){var a=this;return this._sections.push({label:e,condition:function(){return a.time>n&&a.time<t},callback:i}),this}},{key:"onceAt",value:function(e,n,t){var i=this,a=null;return this._sections.push({label:e,condition:function(){return i.time>n&&!this.called},callback:function(){console.log("once :",a.label),t.call(this),a.called=!0},called:!1}),a=this._sections[this._sections.length-1],this}},{key:"getSpectrum",value:function(){return this.analyserNode.getByteFrequencyData(this.frequencyDataArray),this.frequencyDataArray}},{key:"getWaveform",value:function(){return this.analyserNode.getByteTimeDomainData(this.timeDomainDataArray),this.timeDomainDataArray}},{key:"getFrequency",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,t=0,i=this.getSpectrum();if(void 0!==n){for(var a=e;a<=n;a++)t+=i[a];return t/(n-e+1)}return i[e]}},{key:"createKick",value:function(e){var n=e.frequency,t=e.threshold,i=e.decay,a=e.onKick,s=e.offKick,r=new o({frequency:n,threshold:t,decay:i,onKick:a,offKick:s});return this._kicks.push(r),r}},{key:"createBeat",value:function(e){var n=e.factor,t=e.onBeat,i=new r({factor:n,onBeat:t});return this._beats.push(i),i}},{key:"onUpdate",value:function(){this.req=requestAnimationFrame(this._onUpdate);for(var e in this._sections)this._sections[e].condition()&&this._sections[e].callback.call(this);var n=this.getSpectrum();for(var t in this._kicks)this._kicks[t].calc(n);var i=Math.max(0,this.time-this._offsetTime);for(var a in this._beats)this._beats[a].calc(i,this._beatDuration);this.debug&&this.debug.draw()}},{key:"onEnded",value:function(){}},{key:"progress",get:function(){return this._progress}},{key:"isLoaded",get:function(){return this._isLoaded}},{key:"duration",get:function(){return this._isLoaded?this._buffer.duration:0}},{key:"time",get:function(){return this.isPlaying?this.ctx.currentTime-this._startTime:this._pauseTime-this._startTime}},{key:"volume",set:function(e){this.gainNode.gain.value=e},get:function(){return this.gainNode.gain.value}},{key:"isPlaying",get:function(){return this._isPlaying}},{key:"beatDuration",get:function(){return this._beatDuration}}]),e}();n.default=s;var o=function(){function e(n){var t=n.frequency,a=n.threshold,s=n.decay,o=n.onKick,r=n.offKick;i(this,e),this.frequency=void 0!==t?t:[0,10],this.threshold=void 0!==a?a:.3,this.decay=void 0!==s?s:.02,this.onKick=o,this.offKick=r,this.isOn=!1,this.isKick=!1,this.currentThreshold=this.threshold}return a(e,[{key:"on",value:function(){this.isOn=!0}},{key:"off",value:function(){this.isOn=!1}},{key:"set",value:function(e){var n=e.frequency,t=e.threshold,i=e.decay,a=e.onKick,s=e.offKick;this.frequency=void 0!==n?n:this.frequency,this.threshold=void 0!==t?t:this.threshold,this.decay=void 0!==i?i:this.decay,this.onKick=a||this.onKick,this.offKick=s||this.offKick}},{key:"calc",value:function(e){if(this.isOn){var n=this.maxAmplitude(e,this.frequency);n>=this.currentThreshold&&n>=this.threshold?(this.currentThreshold=n,this.onKick&&this.onKick(n),this.isKick=!0):(this.offKick&&this.offKick(n),this.currentThreshold-=this.decay,this.isKick=!1)}}},{key:"maxAmplitude",value:function(e,n){var t=0;if(!n.length)return n<e.length?e[~~n]:null;for(var i=n[0],a=n[1];i<=a;i++)e[i]>t&&(t=e[i]);return t}}]),e}(),r=function(){function e(n){var t=n.factor,a=n.onBeat;i(this,e),this.factor=void 0!==t?t:1,this.onBeat=a,this.isOn=!1,this.currentTime=0}return a(e,[{key:"on",value:function(){this.isOn=!0}},{key:"off",value:function(){this.isOn=!1}},{key:"set",value:function(e){var n=e.factor,t=e.onBeat;this.factor=void 0!==n?n:this.factor,this.onBeat=t||this.onBeat}},{key:"calc",value:function(e,n){if(0!=e){var t=n*this.factor;e>=this.currentTime+t&&(this.isOn&&this.onBeat&&this.onBeat(),this.currentTime+=t)}}}]),e}(),c=function(){function e(n){i(this,e),this.sound=n,this.canvas=document.createElement("canvas"),this.canvas.width=512,this.canvas.height=300,this.canvas.style.position="absolute",this.canvas.style.bottom=0,this.canvas.style.left=0,this.canvas.style.zIndex=3,document.body.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),window.addEventListener("resize",this.resize.bind(this),!1),this.resize()}return a(e,[{key:"resize",value:function(){this.canvas.width=window.innerWidth}},{key:"draw",value:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.beginPath(),this.ctx.rect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#000000",this.ctx.fill(),this.ctx.strokeStyle="#a1a1a1",this.ctx.stroke(),this.ctx.beginPath();for(var e=this.sound.getSpectrum(),n=null,t=e.length,i=this.canvas.width/t,a=this.canvas.height-10,s=0;s<t;s++)n=e[s]/256,this.ctx.rect(s*i,a-a*n,i/2,a*n);this.ctx.fillStyle="#ffffff",this.ctx.fill(),this.ctx.beginPath(),this.ctx.font="10px Arial",this.ctx.textBaseline="middle",this.ctx.textAlign="left";for(var o=0,r=t;o<r;o++)o%10==0&&(this.ctx.rect(o*i,a,i/2,10),this.ctx.fillText(o,o*i+4,a+5));this.ctx.fillStyle="#ffffff",this.ctx.fill();for(var c=this.sound._kicks,l=null,d=c.length,u=null,h=null,f=0,m=d;f<m;f++)l=c[f],l.isOn&&(u=l.frequency.length?l.frequency[0]:l.frequency,h=l.frequency.length?l.frequency[1]-l.frequency[0]+1:1,this.ctx.beginPath(),this.ctx.rect(u*i,a-a*(l.threshold/256),h*i-.5*i,2),this.ctx.rect(u*i,a-a*(l.currentThreshold/256),h*i-.5*i,5),this.ctx.fillStyle=l.isKick?"#00ff00":"#ff0000",this.ctx.fill());this.ctx.beginPath();for(var p=this.sound.getWaveform(),v=null,x=p.length,g=this.canvas.width/x,y=this.canvas.height-10,_=0;_<x;_++)v=p[_]/256,0==_?this.ctx.moveTo(_*g,y*v):this.ctx.lineTo(_*g,y*v);this.ctx.strokeStyle="#0000ff",this.ctx.stroke(),this.ctx.beginPath(),this.ctx.textAlign="right",this.ctx.textBaseline="top",this.ctx.font="15px Arial",this.ctx.fillStyle="#ffffff",this.ctx.fillText(Math.round(10*this.sound.time)/10+" / "+Math.round(10*this.sound.duration)/10,this.canvas.width-5,5),this.ctx.beginPath();for(var b=this.sound._sections,w=null,k=b.length,L="",S=0,z=k;S<z;S++)w=b[S],w.condition()&&(L+=w.label+" - ");L.length>0&&(L=L.substr(0,L.length-3)),this.ctx.fillText(L,this.canvas.width-5,25),this.ctx.fill()}}]),e}()},function(e,n,t){e.exports=t.p+"models/flamingo.ef74ecefa43c3daade7b173c5210b798.json"},function(e,n,t){e.exports=t.p+"models/flappybird.68c6874bd09e4c950d0a0549fd966d1c.json"},function(e,n,t){e.exports=t.p+"sound/qlf.987870794d2a832e81ee25f0e7204e68.mp3"},function(e,n,t){e.exports=t.p+"textures/dmap.c27f76c2ccbb16b5620bdda198d74aae.jpg"},function(e,n,t){e.exports=t.p+"textures/glow.3b6b0c759a85e6ff915f53fed58e066d.png"},function(e,n,t){e.exports=t.p+"textures/smoke.e16c7c6ece686b073903768a1795ca00.png"},function(e,n,t){e.exports=t.p+"textures/waves.37c882fc379d47834504b935c7cb0caf.jpg"},,,function(e,n){e.exports="uniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}"},function(e,n){e.exports="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nuniform float u_time;\nuniform float speed;\nuniform float loaded;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\n        float amplitude = 20.;\n        float lissage = 100.;\n        float scale = 5.;\n\n    \ttransformed.y += (snoise(vec3(transformed.x, u_time * speed + transformed.y, transformed.z ) * .04) * 6.) * loaded;\n    \t//transformed.z += (snoise(transformed * .03) * 2.);\n\n      //  vUv = vUv * scale;\n    \t//vUv.y += u_time * speed * .0013;\n\n    \t//newPosition.y = position.y + (snoise(((position/lissage)+(u_time/speed))) * amplitude);\n\n//      \tgl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n\n}"},function(e,n){e.exports="uniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}"},function(e,n){e.exports="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nuniform float u_time;\nuniform float speed;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\n        #define M_PI 3.1415926535897932384626433832795\n\n        float amplitude = 20.;\n        float lissage = 100.;\n        float scale = 5.;\n\n       float z = (amplitude * sin(((u_time * 0.5 * speed) - (100.)) * M_PI));\n\n    \ttransformed.y += (snoise(vec3(transformed.x, u_time * speed + transformed.y, transformed.z ) * .04) * 6.);\n    \ttransformed.z += (snoise(transformed * .03) * 2.);\n\n        vUv = vUv * scale;\n    \tvUv.y += u_time * speed * .0013;\n\n    \t//newPosition.y = position.y + (snoise(((position/lissage)+(u_time/speed))) * amplitude);\n\n//      \tgl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n\n}"}],[4]);